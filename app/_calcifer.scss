// -------------------------------------------------------------------//
// CALCIFER GRID
// -------------------------------------------------------------------//





// -------------------------------------------------------------------//
// SETTINGS IMPORT
// -------------------------------------------------------------------//
// *
// Dont touch this or you will burn in hell
// *

@import "settings";





// -------------------------------------------------------------------//
// MIXINS
// -------------------------------------------------------------------//
@import "mixins";





// -------------------------------------------------------------------//
// BORDER-BOX
// -------------------------------------------------------------------//
// *
// If border-box is enabled
// *

@if $border-box == true {
	body {
		box-sizing: border-box;
		margin: 0;
		padding: 0;
	}

	* {
		box-sizing: inherit;
	}
}





// -------------------------------------------------------------------//
// GRID GENERATOR
// -------------------------------------------------------------------//
// *
// Mixin for generate the grid and any custom grid that you want (can use for generate custom grids that fits your needs)
//
// You can use this mixin on all of your project passing them the settings you want.
//
// @include generate-grid($colname, $n-columns, $max-width);
// $colname -> The class name for the columns
// $n-columns -> the number of columns that will have the grid
// $$column-gutter -> (optional) set the gutter of the columns.
// $max-width -> (optional) max width of the grid
//
// Example:
// .cusom-grid {
// 	@include generate-grid(wiredcolumn, 5)
// }
// *

@mixin generate-grid ($colname: column, $n-columns: $n-columns, $column-gutter: $column-gutter, $max-width: $max-width) {
	$column-gutter: $column-gutter/2;

	.wrapper {
		margin: 0 auto;
		max-width: $max-width + $default-units;
		padding-left: $column-gutter + $default-units;
		padding-right: $column-gutter + $default-units;
		width: 100%;
	}

	.row {
		margin-left: -$column-gutter + $default-units;
		margin-right: -$column-gutter + $default-units;

		@if $flexbox == true {
			// TODO: add more crosbrowser compatibilities
			display: flex;
			flex-wrap: wrap;
			flex-flow: row wrap;
		} @else {
			@include clearfix;
		}
	}

	// generate the columns
	@for $i from 1 through $n-columns {
		%column-n {
			padding-right: $column-gutter + $default-units;
			padding-left: $column-gutter + $default-units;
			float: left;
		}

		.#{$colname}-#{$i} {
			@extend %column-n;
			width: (((($max-width/$n-columns)*$i)*100)/$max-width) *1%;
			// display: inline-block;
		}

		$i: $i+1;
	}
}

// With this we generate the general grid.
@include generate-grid();





// -------------------------------------------------------------------//
// RESPONSIVE GRID STYLES
// -------------------------------------------------------------------//
// *
// Default responsive grid styles.
// *

// Tablet large
@include tablet-large {

}

// Tablet small
@include tablet-small {

}

// Mobile large
@include mobile-large {
	@for $i from 1 through $n-columns {
		.column-#{$i} {
			width: 100%;
		}
	}
}

// Mobile small
@include mobile-small {

}
